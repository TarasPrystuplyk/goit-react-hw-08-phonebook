{"version":3,"file":"static/js/871.5007eb2a.chunk.js","mappings":"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","sources":["redux/myContacts/contactsSelectors.js","components/filter/Filter.styled.js","components/filter/Filter.jsx","components/list/ContactsList.styled.js","components/list/ContactsItem.styled.js","components/list/ContactsItem.jsx","components/list/ContactsList.jsx","components/form/FormContacts.styled.js","components/form/FormContacts.jsx","pages/PagesStyled.js","pages/ContactsPage.jsx"],"sourcesContent":["export const getItems = state => state.phonebook.items.contacts;\nexport const getIsLoading = state => state.phonebook.items.isLoading;\nexport const getFilter = state => state.phonebook.filter.value;\n\nexport const getVisibleContacts = state => {\n  const allContacts = getItems(state);\n  const contactsFilter = getFilter(state);\n\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(contactsFilter.toLowerCase())\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterContainer = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-top: 24px;\n  color: ${p => p.theme.colors.accentText};\n  justify-content: center;\n`;\n\nexport const FilterInput = styled.input`\n  width: 800px;\n  margin-top: ${p => p.theme.space[2]}px;\n  margin-bottom: ${p => p.theme.space[2]}px;\n  padding: ${p => p.theme.space[2]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  border: ${p => p.theme.borders.none};\n  box-shadow: 2px 4px rgba(0, 0, 0, 0.25);\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { FilterContainer, FilterInput } from './Filter.styled';\nimport { TbSearch } from 'react-icons/tb';\nimport { getFilter } from '../../redux/myContacts/contactsSelectors';\nimport { filterSlice } from '../../redux/myContacts/contactsSlice';\nconst filterId = nanoid();\n\nexport const Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <FilterContainer>\n      <label>\n        {' '}\n        Find contacts by name <TbSearch />\n      </label>\n\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={e =>\n          dispatch(filterSlice.actions.changeFilter(e.target.value))\n        }\n        id={filterId}\n      />\n    </FilterContainer>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onFilter: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const ContactsTitle = styled.h2`\n  text-shadow: ${p => p.theme.textShadow.standart};\n  color: ${p => p.theme.colors.white};\n\n  font-size: ${p => p.theme.fontSizes.l};\n  font-weight: ${p => p.theme.fontWeights.bold};\n`;\n\nexport const Name = styled.span`\n  margin-right: 215px;\n`;\nexport const List = styled.ul`\n  width: ${p => p.theme.space[9]}px;\n  margin: ${p => p.theme.space[0]}px;\n`;\n\nexport const ContactsListContainer = styled.div`\n  display: flex;\n\n  margin-top: ${p => p.theme.space[5]}px;\n`;\n","import styled from 'styled-components';\nimport Button from 'react-bootstrap/Button';\n\nexport const ContactsItem = styled.li`\n  margin-left: ${p => p.theme.space[0]}px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n`;\nexport const ItemWrap = styled.div`\n  width: calc(100% / 2);\n`;\n\nexport const DeleteButton = styled(Button)`\n  display: flex;\n  align-items: center;\n  justify-content: end;\n`;\n\nexport const Text = styled.p`\n  color: ${p => p.theme.colors.text};\n`;\n\nexport const Wrapp = styled.div`\n  display: flex;\n  height: 40px;\n  padding: ${p => p.theme.space[2]}px;\n  padding-right: ${p => p.theme.space[0]}px;\n\n  background-color: ${p => p.theme.colors.white};\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: 2px 4px rgba(0, 0, 0, 0.25);\n\n  & + & {\n    margin-top: 10px;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getIsLoading } from '../../redux/myContacts/contactsSelectors';\nimport { deleteContact } from 'redux/myContacts/contactsOperations';\nimport {\n  ContactsItem,\n  Text,\n  ItemWrap,\n  DeleteButton,\n  Wrapp,\n} from './ContactsItem.styled';\nimport SpinnerBootstrap from 'components/spinner/Spinner';\nimport CloseButton from 'react-bootstrap/CloseButton';\n\nexport const Item = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  const [idToDelete, setIdToDelete] = useState(null);\n\n  return (\n    <Wrapp>\n      <ContactsItem>\n        <ItemWrap>\n          {' '}\n          <Text>{name}</Text>\n        </ItemWrap>\n        <ItemWrap>\n          {' '}\n          <Text>{number}</Text>\n        </ItemWrap>\n      </ContactsItem>{' '}\n      <DeleteButton\n        type=\"button\"\n        id={id}\n        onClick={() => {\n          setIdToDelete(id);\n          dispatch(deleteContact(id));\n        }}\n        disabled={isLoading}\n        variant=\"light\"\n      >\n        {id === idToDelete ? <SpinnerBootstrap /> : <CloseButton />}\n      </DeleteButton>\n    </Wrapp>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { List, Name, ContactsTitle } from './ContactsList.styled';\nimport { getVisibleContacts } from '../../redux/myContacts/contactsSelectors';\nimport { ContactsListContainer } from './ContactsList.styled';\nimport { Item } from './ContactsItem';\n\nexport const ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n\n  return (\n    <ContactsListContainer>\n      <ContactsTitle>Contacts list</ContactsTitle>\n      <List>\n        <Name>Name</Name> <span>Phone</span>\n        {contacts &&\n          contacts.map(({ id, name, number }) => {\n            return <Item key={id} id={id} name={name} number={number} />;\n          })}\n      </List>\n    </ContactsListContainer>\n  );\n};\n\nContactList.propTypes = {\n  contactsInfo: PropTypes.arrayOf(PropTypes.shape),\n  deleteContact: PropTypes.func,\n};\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\nimport Button from 'react-bootstrap/Button';\n\nexport const Box = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  background-color: ${p => p.theme.colors.background};\n  height: 300px;\n  padding: ${p => p.theme.space[4]}px;\n\n  border-radius: ${p => p.theme.radii.normal};\n`;\nexport const Heading = styled.h2`\n  color: ${p => p.theme.colors.accentText};\n  text-shadow: ${p => p.theme.textShadow.standart};\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Input = styled(Field)`\n  width: 300px;\n  margin-top: ${p => p.theme.space[2]}px;\n  padding: ${p => p.theme.space[2]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  border: ${p => p.theme.borders.normal};\n`;\n\nexport const InputName = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-top: ${p => p.theme.space[2]}px;\n  color: ${p => p.theme.colors.accentText};\n`;\n\nexport const SubmitButton = styled(Button)`\n  display: flex;\n  justify-content: center;\n  width: 200px;\n  padding: ${p => p.theme.space[3]}px;\n  margin-top: ${p => p.theme.space[5]}px;\n  margin-bottom: ${p => p.theme.space[4]}px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport { nanoid } from 'nanoid';\nimport {\n  Box,\n  Input,\n  InputName,\n  SubmitButton,\n  Heading,\n} from './FormContacts.styled';\nimport { getItems } from '../../redux/myContacts/contactsSelectors';\nimport { addContact } from 'redux/myContacts/contactsOperations';\nimport { toast } from 'react-toastify';\n\nconst idName = nanoid();\nconst idNumber = nanoid();\n\nexport const ContactsReviewForm = () => {\n  const items = useSelector(getItems);\n  const dispatch = useDispatch();\n\n  const handleSubmit = ({ name, number, id }, { resetForm }) => {\n    const contactsNames = items.map(items => items.name);\n\n    if (contactsNames.includes(name)) {\n      toast.error(` ${name} is already in contacts.`);\n    } else {\n      const newPerson = {\n        name,\n        number,\n        id,\n      };\n      dispatch(addContact(newPerson));\n    }\n    resetForm();\n  };\n\n  return (\n    <Formik initialValues={{ name: '', number: '' }} onSubmit={handleSubmit}>\n      <Box>\n        <Heading>Add new contact</Heading>\n        <InputName>\n          Name\n          <Input\n            autoComplete=\"off\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            id={idName}\n          />\n        </InputName>\n\n        <InputName>\n          Phone\n          <Input\n            autoComplete=\"off\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            id={idNumber}\n          />{' '}\n        </InputName>\n\n        <SubmitButton type=\"submit\" variant=\"info\">\n          Add\n        </SubmitButton>\n      </Box>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n\n  margin-top: ${p => p.theme.space[5]}px;\n`;\nexport const Message = styled.p`\n  width: fit-content;\n  margin: 0 auto;\n  font-size: ${p => p.theme.fontSizes.l};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  color: ${p => p.theme.colors.white};\n  padding: ${p => p.theme.space[3]}px;\n  margin-top: ${p => p.theme.space[5]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  opacity: 0.9;\n  background-color: ${p => p.theme.colors.background};\n  text-shadow: ${p => p.theme.textShadow.standart};\n`;\nexport const Box = styled.div`\n  background-color: ${p => p.theme.colors.background};\n  padding: ${p => p.theme.space[4]}px;\n  border-radius: ${p => p.theme.radii.normal};\n`;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { fetchContacts } from 'redux/myContacts/contactsOperations';\nimport { getVisibleContacts } from 'redux/myContacts/contactsSelectors';\nimport { Filter } from 'components/filter/Filter';\nimport { ContactList } from '../components/list/ContactsList';\nimport { ContactsReviewForm } from 'components/form/FormContacts';\nimport { ContactsContainer, Message, Box } from './PagesStyled';\nimport { useAuth } from 'hooks/useAuth';\n\nconst ContactsPage = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n  const { user } = useAuth();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>{`${user.name}'s contacts`}</title>\n      </Helmet>\n      {contacts.length !== 0 ? (\n        <ContactsContainer>\n          <ContactsReviewForm />{' '}\n          <Box>\n            <Filter />\n\n            <ContactList />\n          </Box>\n        </ContactsContainer>\n      ) : (\n        <ContactsContainer>\n          {' '}\n          <ContactsReviewForm />\n          <Box>\n            <Filter />\n            <Message>There are no contacts</Message>\n          </Box>\n        </ContactsContainer>\n      )}\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["getItems","state","phonebook","items","contacts","getIsLoading","isLoading","getFilter","filter","value","getVisibleContacts","allContacts","contactsFilter","contact","name","toLowerCase","includes","FilterContainer","styled","p","theme","colors","accentText","FilterInput","space","radii","normal","borders","none","filterId","nanoid","Filter","useSelector","dispatch","useDispatch","type","onChange","e","filterSlice","target","id","ContactsTitle","textShadow","standart","white","fontSizes","l","fontWeights","bold","Name","List","ContactsListContainer","ContactsItem","ItemWrap","DeleteButton","Button","Text","text","Wrapp","Item","number","useState","idToDelete","setIdToDelete","onClick","deleteContact","disabled","variant","Spinner","CloseButton","ContactList","map","Box","Form","background","Heading","Input","Field","InputName","SubmitButton","idName","idNumber","ContactsReviewForm","initialValues","onSubmit","resetForm","toast","newPerson","addContact","autoComplete","pattern","title","required","ContactsContainer","Message","user","useAuth","useEffect","fetchContacts","Helmet","length"],"sourceRoot":""}